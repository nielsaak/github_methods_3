knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4, readbulk, grid, gridExtra, MuMIn, dfoptim)
data_exp_2 <- read_bulk("experiment_2", extension = ".csv")
View(data_exp_2)
knitr::opts_chunk$set(echo = TRUE)
data_exp_1 <- read_bulk("experiment_1", extension = ".csv")
View(data_exp_1)
unique(data_exp_1$seed)
count(data_exp_1$seed == NA)
data_exp_1$seed == NA
View(data_exp_2)
View(data_exp_1)
data_exp_1 <- read_bulk("experiment_1", extension = ".csv")
nrow(data_exp_1 == NA)
nrow(data_exp_1$seed == NA)
nrow(data_exp_1$seed == is.NA)
nrow(data_exp_1$seed == is.NA())
nrow(is.NA(data_exp_1$seed) == TRUE)
nrow(is.na(data_exp_1$seed) == TRUE)
View(data_exp_1)
sum(is.na(data_exp_1$seed))
glimpse(data_exp_1)
View(data_exp_1)
data_exp_1_1 <- data_exp_1
data_exp_1_1$pas <- as.factor(data_exp_1_1$pas)
data_exp_1_1$trial <- as.factor(data_exp_1_1$trial)
data_exp_1_1$cue <- as.factor(data_exp_1_1$cue)
data_exp_1_1$even.digit <- as.factor(data_exp_1_1$even.digit)
data_exp_1_1$seed <- as.factor(data_exp_1_1$seed)
data_exp_1_1$subject <- as.factor(data_exp_1_1$subject)
data_exp_1_2 <- data_exp_1_1 %>%
filter(trial.type == "practice")
data_exp_1_2 <- data_exp_1_1 %>%
filter(trial.type != "practice")
data_exp_1_2$correct <- ifelse(data_exp_1_2$target.type == "odd" & data_exp_1_2$obj.resp == "o", 1, ifelse(data_exp_1_2$target.type == "even" & data_exp_1_2$obj.resp == "e", 1), 0))
data_exp_1_2$correct <- ifelse(data_exp_1_2$target.type == "odd" & data_exp_1_2$obj.resp == "o", 1, ifelse(data_exp_1_2$target.type == "even" & data_exp_1_2$obj.resp == "e", 1), 0)
data_exp_1_2$correct <- ifelse(data_exp_1_2$target.type == "odd" & data_exp_1_2$obj.resp == "o", 1, ifelse(data_exp_1_2$target.type == "even" & data_exp_1_2$obj.resp == "e", 1, 0))
View(data_exp_2)
View(data_exp_1_2)
data_exp_2 <- read_bulk("experiment_2", extension = ".csv")
data_exp_both <- data.frame(data_exp_1, data_exp_2)
data_exp_2 <- read_bulk("experiment_2", extension = ".csv")
data_exp_both <- inner_join(data_exp_1, data_exp_2)
View(data_exp_both)
data_exp_both <- inner_join(data_exp_1, data_exp_2)
data_exp_both <- outer_join(data_exp_1, data_exp_2)
data_exp_both <- rbind(data_exp_1, data_exp_2)
View(data_exp_both)
data_exp_2$df <- 2
data_exp_1$df <- 1
data_exp_both <- rbind(data_exp_1, data_exp_2)
View(data_exp_both)
data_exp_both %>%
ggplot(aes(x = target.contrast)) +
geom_histogram() +
facet_wrap(df)
data_exp_both %>%
ggplot(aes(x = target.contrast)) +
geom_histogram() +
facet_wrap(~df)
data_exp_both %>%
ggplot(aes(x = target.contrast)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~df)
data_exp_both %>%
ggplot(aes(x = target.frames)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~df)
View(data_exp_1)
View(data_exp_1_2)
mod_1_pool <- glm(correct ~ target.frames + subject + target.frames:subject, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glm(correct ~ target.frames + (1 | subject), data = data_exp_1_2, family = 'binomial')
mod_1_pool <- glm(correct ~ target.frames + subject + target.frames:subject, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glm(correct ~ target.frames + (1 | subject), data = data_exp_1_2, family = 'binomial')
glimpse(data_exp_1_2)
glimpse(data_exp_1)
data_exp_1_1 <- data_exp_1
data_exp_1_1$pas <- as.factor(data_exp_1_1$pas)
data_exp_1_1$trial <- as.factor(data_exp_1_1$trial)
data_exp_1_1$cue <- as.factor(data_exp_1_1$cue)
data_exp_1_1$even.digit <- as.factor(data_exp_1_1$even.digit)
data_exp_1_1$seed <- as.factor(data_exp_1_1$seed)
data_exp_1_1$subject <- as.character(data_exp_1_1$subject)
data_exp_1_2 <- data_exp_1_1 %>%
filter(trial.type != "practice")
data_exp_1_2$correct <- ifelse(data_exp_1_2$target.type == "odd" & data_exp_1_2$obj.resp == "o", 1, ifelse(data_exp_1_2$target.type == "even" & data_exp_1_2$obj.resp == "e", 1, 0))
mod_1_pool <- glm(correct ~ target.frames + subject + target.frames:subject, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glm(correct ~ target.frames + (1 | subject), data = data_exp_1_2, family = 'binomial')
mod_1_pool <- glm(correct ~ target.frames + subject + target.frames:subject, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glmer(correct ~ target.frames + (1|subject), data = data_exp_1_2, family = 'binomial')
summary(mod_1_pool)
mod_1_pool <- glm(correct ~ target.frames, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glmer(correct ~ target.frames + (1|subject), data = data_exp_1_2, family = 'binomial')
summary(mod_1_pool)
mod_1_pool$coefficients
mod_1_pool$coefficients[1]
as.numeric(mod_1_pool$coefficients[1])
as.numeric(mod_1_pool$coefficients[1])+as.numeric(mod_1_pool$coefficients[2])
mod_1_pool$fitted.values
logit <-     function(x) log(x / (1 - x))
inv.logit <- function(x) exp(x) / (1 + exp(x))
#as.numeric(mod_1_pool$coefficients[1])+as.numeric(mod_1_pool$coefficients[2]*x)
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$inv_logit_fit <- inv.logit(mod_1_pool$fitted.values)
View(data_exp_1_3)
p_s = c(1,2,3)
prod(data_exp_1_3$inv_logit_fit)
prod()
p_s = c(1,2,3)
#prod(data_exp_1_3$inv_logit_fit)
prod(p_s)
p_s = c()
#prod(data_exp_1_3$inv_logit_fit)
for (p in nrow(data_exp_1_3$inv_logit_fit)){
p = data_exp_1_3$inv_logit_fit[i]
y_i = data_exp_1_3$correct[i]
p_s[i] = p**y_i * (1-p)**(1-y_i)
}
prod(p_s)
p_s
p_s
p_s = c()
#prod(data_exp_1_3$inv_logit_fit)
for (p in nrow(data_exp_1_3$inv_logit_fit)){
p = data_exp_1_3$inv_logit_fit[i]
y_i = data_exp_1_3$correct[i]
p_s[i] <-  p**y_i * (1-p)**(1-y_i)
}
prod(p_s)
p = data_exp_1_3$inv_logit_fit[i]
p = data_exp_1_3$inv_logit_fit
y_i = data_exp_1_3$correct
prod(p**y_i * (1-p)**(1-y_i))
p = data_exp_1_3$inv_logit_fit
y_i = data_exp_1_3$correct
sum(y_i * log(p + (1-y_i) * log(1- p)))
p = data_exp_1_3$inv_logit_fit
y_i = data_exp_1_3$correct
sum(y_i * log(p + (1-y_i)) * log(1- p)))
p = data_exp_1_3$inv_logit_fit
y_i = data_exp_1_3$correct
sum(y_i * log(p + (1-y_i)) * log(1- p))
p = data_exp_1_3$inv_logit_fit
y_i = data_exp_1_3$correct
sum(y_i * log(p) + (1-y_i) * log(1- p))
likelihood <-     function(p_i, y_i) {
prod(p**y_i * (1-p)**(1-y_i))
}
likelihood <-     function(p_i, y_i) {
prod(p**y_i * (1-p)**(1-y_i))
}
likelihood(data_exp_1_3$inv_logit_fit, data_exp_1_3$correct)
log_likelihood <-     function(p_i, y_i) {
sum(y_i * log(p) + (1-y_i) * log(1- p))
}
log_likelihood(data_exp_1_3$inv_logit_fit, data_exp_1_3$correct)
logit <-     function(x) log(x / (1 - x))
inv.logit <- function(x) exp(x) / (1 + exp(x))
#as.numeric(mod_1_pool$coefficients[1])+as.numeric(mod_1_pool$coefficients[2]*x)
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$inv_logit_fit_pool <- inv.logit(mod_1_pool$fitted.values)
likelihood <-     function(p_i, y_i) {
prod(p**y_i * (1-p)**(1-y_i))
}
?logLik()
logLik(mod_1_pool)
logit <-     function(x) log(x / (1 - x))
inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$inv_logit_fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$inv_logit_fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$inv_logit_fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
logit <-     function(x) log(x / (1 - x))
inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$inv_logit_fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$inv_logit_fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$inv_logit_fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
logit <-     function(x) log(x / (1 - x))
inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
data_exp_1_3$fit_pool <- mod_1_pool$fitted.values
log_likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
mod_1_pool <- glm(correct ~ target.frames, data = data_exp_1_2, family = 'binomial')
#logit <-     function(x) log(x / (1 - x))
#inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, lme4, readbulk, grid, gridExtra, MuMIn, dfoptim)
data_exp_1 <- read_bulk("experiment_1", extension = ".csv")
sum(is.na(data_exp_1$seed))
glimpse(data_exp_1)
data_exp_1_1 <- data_exp_1
data_exp_1_1$pas <- as.factor(data_exp_1_1$pas)
data_exp_1_1$trial <- as.factor(data_exp_1_1$trial)
data_exp_1_1$cue <- as.factor(data_exp_1_1$cue)
data_exp_1_1$even.digit <- as.factor(data_exp_1_1$even.digit)
data_exp_1_1$seed <- as.factor(data_exp_1_1$seed)
data_exp_1_1$subject <- as.character(data_exp_1_1$subject)
data_exp_1_2 <- data_exp_1_1 %>%
filter(trial.type != "practice")
data_exp_1_2$correct <- ifelse(data_exp_1_2$target.type == "odd" & data_exp_1_2$obj.resp == "o", 1, ifelse(data_exp_1_2$target.type == "even" & data_exp_1_2$obj.resp == "e", 1, 0))
data_exp_2 <- read_bulk("experiment_2", extension = ".csv")
data_exp_2$df <- 2
data_exp_1$df <- 1
data_exp_both <- rbind(data_exp_1, data_exp_2)
data_exp_both %>%
ggplot(aes(x = target.contrast)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~df)
data_exp_both %>%
ggplot(aes(x = target.frames)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~df)
mod_1_pool <- glm(correct ~ target.frames, data = data_exp_1_2, family = 'binomial')
mod_1_part <- glmer(correct ~ target.frames + (1|subject), data = data_exp_1_2, family = 'binomial')
likelihood <-     function(p_i, y_i) {
prod(p**y_i * (1-p)**(1-y_i))
}
log_likelihood <-     function(p_i, y_i) {
sum(y_i * log(p) + (1-y_i) * log(1- p))
}
#logit <-     function(x) log(x / (1 - x))
#inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
log_likelihood <-     function(p_i, y_i) {
sum(y_i * log(p_i) + (1-y_i) * log(1- p_i))
}
#logit <-     function(x) log(x / (1 - x))
#inv.logit <- function(x) exp(x) / (1 + exp(x))
data_exp_1_3 <- data_exp_1_2
data_exp_1_3$fit_pool <- mod_1_pool$fitted.values
likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$fit_pool, data_exp_1_3$correct)
logLik(mod_1_pool)
data_exp_1_3$fit_part <- mod_1_part$fitted.values
data_exp_1_3$fit_part <- fitted(mod_1_part)
likelihood(data_exp_1_3$fit_part, data_exp_1_3$correct)
log_likelihood(data_exp_1_3$fit_part, data_exp_1_3$correct)
logLik(mod_1_part)
